C51 COMPILER V9.60.0.0   SMB_INIT                                                          04/16/2021 20:29:50 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SMB_INIT
OBJECT MODULE PLACED IN .\src/SMB_init.OBJ
COMPILER INVOKED BY: Z:\home\rootie\Documents\SimplicityStudio_v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe /home/
                    -rootie/SimplicityStudio/v5_workspace/tp4/src/SMB_init.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFU
                    -ZZY(3) OPTIMIZE(0,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/home/rootie/Documents/SimplicityStudio_v5/
                    -developer/sdks/8051/v4.2.0//Device/shared/si8051Base;/home/rootie/Documents/SimplicityStudio_v5/developer/sdks/8051/v4.2
                    -.0//Device/EFM8BB3/inc) PRINT(.\src/SMB_init.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/SMB_init.OBJ)

line level    source

   1          /*
   2           * SMB_init.c
   3           *
   4           *  Created on: Apr 15, 2021
   5           *      Author: rootie
   6           */
   7          
   8          
   9          
  10          // USER INCLUDES
  11          #include <SI_EFM8BB3_Register_Enums.h>
  12          #include "../inc/SMB_init.h"
  13          
  14          // USER PROTOTYPES
  15          // USER FUNCTIONS
  16          
  17          
  18          // $[Library Includes]
  19          // [Library Includes]$
  20          
  21          //==============================================================================
  22          // enter_BusFreeMode_from_RESET
  23          //==============================================================================
  24          extern void enter_BusFreeMode_from_RESET(void) {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_BusFreeMode_from_RESET();
  27   1        CLOCK_0_enter_BusFreeMode_from_RESET();
  28   1        // [Config Calls]$
  29   1      
  30   1      
  31   1      }
  32          
  33          
  34          //================================================================================
  35          // WDT_0_enter_BusFreeMode_from_RESET
  36          //================================================================================
  37          extern void WDT_0_enter_BusFreeMode_from_RESET(void) {
  38   1        // $[WDTCN - Watchdog Timer Control]
  39   1        //Disable Watchdog with key sequence
  40   1        WDTCN = 0xDE; //First key
  41   1        WDTCN = 0xAD; //Second key
  42   1        // [WDTCN - Watchdog Timer Control]$
  43   1      
  44   1      
  45   1      }
  46          
  47          //================================================================================
  48          // CLOCK_0_enter_BusFreeMode_from_RESET
  49          //================================================================================
  50          extern void CLOCK_0_enter_BusFreeMode_from_RESET(void) {
  51   1        // $[CLKSEL - Clock Select]
  52   1        /*
C51 COMPILER V9.60.0.0   SMB_INIT                                                          04/16/2021 20:29:50 PAGE 2   

  53   1        // CLKSL (Clock Source Select) = HFOSC (Clock derived from the Internal
  54   1        //     High-Frequency Oscillator.)
  55   1        // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
  56   1        //     selected clock source divided by 1.)
  57   1        */
  58   1        CLKSEL = CLKSEL_CLKDIV__SYSCLK_DIV_1;
  59   1        // [CLKSEL - Clock Select]$
  60   1      
  61   1      
  62   1      }
  63          
  64          //==============================================================================
  65          // enter_DefaultMode_from_BusFreeMode
  66          //==============================================================================
  67          extern void enter_DefaultMode_from_BusFreeMode(void) {
  68   1        // $[Config Calls]
  69   1        PORTS_0_enter_DefaultMode_from_BusFreeMode();
  70   1        PORTS_1_enter_DefaultMode_from_BusFreeMode();
  71   1        PBCFG_0_enter_DefaultMode_from_BusFreeMode();
  72   1        TIMER01_0_enter_DefaultMode_from_BusFreeMode();
  73   1        TIMER16_3_enter_DefaultMode_from_BusFreeMode();
  74   1        TIMER_SETUP_0_enter_DefaultMode_from_BusFreeMode();
  75   1        SMBUS_0_enter_DefaultMode_from_BusFreeMode();
  76   1        INTERRUPT_0_enter_DefaultMode_from_BusFreeMode();
  77   1        // [Config Calls]$
  78   1      
  79   1      
  80   1      }
  81          
  82          
  83          //================================================================================
  84          // PORTS_0_enter_DefaultMode_from_BusFreeMode
  85          //================================================================================
  86          extern void PORTS_0_enter_DefaultMode_from_BusFreeMode(void) {
  87   1        // $[P0 - Port 0 Pin Latch]
  88   1        // [P0 - Port 0 Pin Latch]$
  89   1      
  90   1        // $[P0MDOUT - Port 0 Output Mode]
  91   1        /*
  92   1        // B0 (Port 0 Bit 0 Output Mode) = PUSH_PULL (P0.0 output is push-pull.)
  93   1        // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
  94   1        //     drain.)
  95   1        // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
  96   1        //     drain.)
  97   1        // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
  98   1        //     drain.)
  99   1        // B4 (Port 0 Bit 4 Output Mode) = OPEN_DRAIN (P0.4 output is open-
 100   1        //     drain.)
 101   1        // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
 102   1        //     drain.)
 103   1        // B6 (Port 0 Bit 6 Output Mode) = OPEN_DRAIN (P0.6 output is open-
 104   1        //     drain.)
 105   1        // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
 106   1        //     drain.)
 107   1        */
 108   1        P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__OPEN_DRAIN | P0MDOUT_B2__OPEN_DRAIN
 109   1           | P0MDOUT_B3__OPEN_DRAIN | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 110   1           | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 111   1        // [P0MDOUT - Port 0 Output Mode]$
 112   1      
 113   1        // $[P0MDIN - Port 0 Input Mode]
 114   1        // [P0MDIN - Port 0 Input Mode]$
 115   1      
C51 COMPILER V9.60.0.0   SMB_INIT                                                          04/16/2021 20:29:50 PAGE 3   

 116   1        // $[P0SKIP - Port 0 Skip]
 117   1        /*
 118   1        // B0 (Port 0 Bit 0 Skip) = SKIPPED (P0.0 pin is skipped by the
 119   1        //     crossbar.)
 120   1        // B1 (Port 0 Bit 1 Skip) = SKIPPED (P0.1 pin is skipped by the
 121   1        //     crossbar.)
 122   1        // B2 (Port 0 Bit 2 Skip) = SKIPPED (P0.2 pin is skipped by the
 123   1        //     crossbar.)
 124   1        // B3 (Port 0 Bit 3 Skip) = SKIPPED (P0.3 pin is skipped by the
 125   1        //     crossbar.)
 126   1        // B4 (Port 0 Bit 4 Skip) = SKIPPED (P0.4 pin is skipped by the
 127   1        //     crossbar.)
 128   1        // B5 (Port 0 Bit 5 Skip) = SKIPPED (P0.5 pin is skipped by the
 129   1        //     crossbar.)
 130   1        // B6 (Port 0 Bit 6 Skip) = SKIPPED (P0.6 pin is skipped by the
 131   1        //     crossbar.)
 132   1        // B7 (Port 0 Bit 7 Skip) = SKIPPED (P0.7 pin is skipped by the
 133   1        //     crossbar.)
 134   1        */
 135   1        P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 136   1           | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 137   1           | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 138   1        // [P0SKIP - Port 0 Skip]$
 139   1      
 140   1        // $[P0MASK - Port 0 Mask]
 141   1        // [P0MASK - Port 0 Mask]$
 142   1      
 143   1        // $[P0MAT - Port 0 Match]
 144   1        // [P0MAT - Port 0 Match]$
 145   1      
 146   1      
 147   1      }
 148          
 149          //================================================================================
 150          // PORTS_1_enter_DefaultMode_from_BusFreeMode
 151          //================================================================================
 152          extern void PORTS_1_enter_DefaultMode_from_BusFreeMode(void) {
 153   1        // $[P1 - Port 1 Pin Latch]
 154   1        // [P1 - Port 1 Pin Latch]$
 155   1      
 156   1        // $[P1MDOUT - Port 1 Output Mode]
 157   1        // [P1MDOUT - Port 1 Output Mode]$
 158   1      
 159   1        // $[P1MDIN - Port 1 Input Mode]
 160   1        // [P1MDIN - Port 1 Input Mode]$
 161   1      
 162   1        // $[P1SKIP - Port 1 Skip]
 163   1        /*
 164   1        // B0 (Port 1 Bit 0 Skip) = SKIPPED (P1.0 pin is skipped by the
 165   1        //     crossbar.)
 166   1        // B1 (Port 1 Bit 1 Skip) = SKIPPED (P1.1 pin is skipped by the
 167   1        //     crossbar.)
 168   1        // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 169   1        //     crossbar.)
 170   1        // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
 171   1        //     crossbar.)
 172   1        // B4 (Port 1 Bit 4 Skip) = NOT_SKIPPED (P1.4 pin is not skipped by the
 173   1        //     crossbar.)
 174   1        // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
 175   1        //     crossbar.)
 176   1        // B6 (Port 1 Bit 6 Skip) = NOT_SKIPPED (P1.6 pin is not skipped by the
 177   1        //     crossbar.)
 178   1        // B7 (Port 1 Bit 7 Skip) = NOT_SKIPPED (P1.7 pin is not skipped by the
C51 COMPILER V9.60.0.0   SMB_INIT                                                          04/16/2021 20:29:50 PAGE 4   

 179   1        //     crossbar.)
 180   1        */
 181   1        P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__NOT_SKIPPED
 182   1           | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 183   1           | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__NOT_SKIPPED;
 184   1        // [P1SKIP - Port 1 Skip]$
 185   1      
 186   1        // $[P1MASK - Port 1 Mask]
 187   1        // [P1MASK - Port 1 Mask]$
 188   1      
 189   1        // $[P1MAT - Port 1 Match]
 190   1        // [P1MAT - Port 1 Match]$
 191   1      
 192   1      
 193   1      }
 194          
 195          //================================================================================
 196          // PBCFG_0_enter_DefaultMode_from_BusFreeMode
 197          //================================================================================
 198          extern void PBCFG_0_enter_DefaultMode_from_BusFreeMode(void) {
 199   1        // $[XBR2 - Port I/O Crossbar 2]
 200   1        /*
 201   1        // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 202   1        //     Pullups enabled (except for Ports whose I/O are configured for analog
 203   1        //     mode).)
 204   1        // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 205   1        */
 206   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 207   1        // [XBR2 - Port I/O Crossbar 2]$
 208   1      
 209   1        // $[PRTDRV - Port Drive Strength]
 210   1        // [PRTDRV - Port Drive Strength]$
 211   1      
 212   1        // $[XBR0 - Port I/O Crossbar 0]
 213   1        /*
 214   1        // URT0E (UART I/O Output Enable) = DISABLED (UART I/O unavailable at
 215   1        //     Port pin.)
 216   1        // SPI0E (SPI I/O Enable) = DISABLED (SPI I/O unavailable at Port pins.)
 217   1        // SMB0E (SMBus0 I/O Enable) = ENABLED (SMBus0 I/O routed to Port pins.)
 218   1        // CP0E (Comparator0 Output Enable) = DISABLED (CP0 unavailable at Port
 219   1        //     pin.)
 220   1        // CP0AE (Comparator0 Asynchronous Output Enable) = DISABLED
 221   1        //     (Asynchronous CP0 unavailable at Port pin.)
 222   1        // CP1E (Comparator1 Output Enable) = DISABLED (CP1 unavailable at Port
 223   1        //     pin.)
 224   1        // CP1AE (Comparator1 Asynchronous Output Enable) = DISABLED
 225   1        //     (Asynchronous CP1 unavailable at Port pin.)
 226   1        // SYSCKE (SYSCLK Output Enable) = DISABLED (SYSCLK unavailable at Port
 227   1        //     pin.)
 228   1        */
 229   1        XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__ENABLED
 230   1           | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 231   1           | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 232   1        // [XBR0 - Port I/O Crossbar 0]$
 233   1      
 234   1        // $[XBR1 - Port I/O Crossbar 1]
 235   1        // [XBR1 - Port I/O Crossbar 1]$
 236   1      
 237   1      
 238   1      }
 239          
 240          //================================================================================
 241          // TIMER01_0_enter_DefaultMode_from_BusFreeMode
C51 COMPILER V9.60.0.0   SMB_INIT                                                          04/16/2021 20:29:50 PAGE 5   

 242          //================================================================================
 243          extern void TIMER01_0_enter_DefaultMode_from_BusFreeMode(void) {
 244   1        // $[Timer Initialization]
 245   1        //Save Timer Configuration
 246   1        uint8_t TCON_save = TCON;
 247   1        //Stop Timers
 248   1        TCON &= TCON_TR0__BMASK & TCON_TR1__BMASK;
 249   1      
 250   1        // [Timer Initialization]$
 251   1      
 252   1        // $[TH0 - Timer 0 High Byte]
 253   1        /*
 254   1        // TH0 (Timer 0 High Byte) = 0x38
 255   1        */
 256   1        TH0 = (0x38 << TH0_TH0__SHIFT);
 257   1        // [TH0 - Timer 0 High Byte]$
 258   1      
 259   1        // $[TL0 - Timer 0 Low Byte]
 260   1        /*
 261   1        // TL0 (Timer 0 Low Byte) = 0x13
 262   1        */
 263   1        TL0 = (0x13 << TL0_TL0__SHIFT);
 264   1        // [TL0 - Timer 0 Low Byte]$
 265   1      
 266   1        // $[TH1 - Timer 1 High Byte]
 267   1        /*
 268   1        // TH1 (Timer 1 High Byte) = 0x34
 269   1        */
 270   1        TH1 = (0x34 << TH1_TH1__SHIFT);
 271   1        // [TH1 - Timer 1 High Byte]$
 272   1      
 273   1        // $[TL1 - Timer 1 Low Byte]
 274   1        /*
 275   1        // TL1 (Timer 1 Low Byte) = 0x34
 276   1        */
 277   1        TL1 = (0x34 << TL1_TL1__SHIFT);
 278   1        // [TL1 - Timer 1 Low Byte]$
 279   1      
 280   1        // $[Timer Restoration]
 281   1        //Restore Timer Configuration
 282   1        TCON = TCON_save;
 283   1      
 284   1        // [Timer Restoration]$
 285   1      
 286   1      
 287   1      }
 288          
 289          //================================================================================
 290          // TIMER16_3_enter_DefaultMode_from_BusFreeMode
 291          //================================================================================
 292          extern void TIMER16_3_enter_DefaultMode_from_BusFreeMode(void) {
 293   1        // $[Timer Initialization]
 294   1        // Save Timer Configuration
 295   1        uint8_t TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 296   1        // Stop Timer
 297   1        TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 298   1        // [Timer Initialization]$
 299   1      
 300   1        // $[TMR3CN0 - Timer 3 Control]
 301   1        // [TMR3CN0 - Timer 3 Control]$
 302   1      
 303   1        // $[TMR3H - Timer 3 High Byte]
 304   1        // [TMR3H - Timer 3 High Byte]$
C51 COMPILER V9.60.0.0   SMB_INIT                                                          04/16/2021 20:29:50 PAGE 6   

 305   1      
 306   1        // $[TMR3L - Timer 3 Low Byte]
 307   1        // [TMR3L - Timer 3 Low Byte]$
 308   1      
 309   1        // $[TMR3RLH - Timer 3 Reload High Byte]
 310   1        /*
 311   1        // TMR3RLH (Timer 3 Reload High Byte) = 0x38
 312   1        */
 313   1        TMR3RLH = (0x38 << TMR3RLH_TMR3RLH__SHIFT);
 314   1        // [TMR3RLH - Timer 3 Reload High Byte]$
 315   1      
 316   1        // $[TMR3RLL - Timer 3 Reload Low Byte]
 317   1        /*
 318   1        // TMR3RLL (Timer 3 Reload Low Byte) = 0x9E
 319   1        */
 320   1        TMR3RLL = (0x9E << TMR3RLL_TMR3RLL__SHIFT);
 321   1        // [TMR3RLL - Timer 3 Reload Low Byte]$
 322   1      
 323   1        // $[TMR3CN0]
 324   1        /*
 325   1        // TR3 (Timer 3 Run Control) = RUN (Start Timer 3 running.)
 326   1        */
 327   1        TMR3CN0 |= TMR3CN0_TR3__RUN;
 328   1        // [TMR3CN0]$
 329   1      
 330   1        // $[Timer Restoration]
 331   1        // Restore Timer Configuration
 332   1        TMR3CN0 |= TMR3CN0_TR3_save;
 333   1        // [Timer Restoration]$
 334   1      
 335   1      
 336   1      }
 337          
 338          //================================================================================
 339          // TIMER_SETUP_0_enter_DefaultMode_from_BusFreeMode
 340          //================================================================================
 341          extern void TIMER_SETUP_0_enter_DefaultMode_from_BusFreeMode(void) {
 342   1        // $[CKCON0 - Clock Control 0]
 343   1        /*
 344   1        // SCA (Timer 0/1 Prescale) = SYSCLK_DIV_4 (System clock divided by 4.)
 345   1        // T0M (Timer 0 Clock Select) = PRESCALE (Counter/Timer 0 uses the clock
 346   1        //     defined by the prescale field, SCA.)
 347   1        // T2MH (Timer 2 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 high
 348   1        //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 349   1        // T2ML (Timer 2 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 2 low
 350   1        //     byte uses the clock defined by T2XCLK in TMR2CN0.)
 351   1        // T3MH (Timer 3 High Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 high
 352   1        //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 353   1        // T3ML (Timer 3 Low Byte Clock Select) = EXTERNAL_CLOCK (Timer 3 low
 354   1        //     byte uses the clock defined by T3XCLK in TMR3CN0.)
 355   1        // T1M (Timer 1 Clock Select) = PRESCALE (Timer 1 uses the clock defined
 356   1        //     by the prescale field, SCA.)
 357   1        */
 358   1        CKCON0 = CKCON0_SCA__SYSCLK_DIV_4 | CKCON0_T0M__PRESCALE | CKCON0_T2MH__EXTERNAL_CLOCK
 359   1           | CKCON0_T2ML__EXTERNAL_CLOCK | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 360   1           | CKCON0_T1M__PRESCALE;
 361   1        // [CKCON0 - Clock Control 0]$
 362   1      
 363   1        // $[TMOD - Timer 0/1 Mode]
 364   1        /*
 365   1        // T0M (Timer 0 Mode Select) = MODE0 (Mode 0, 13-bit Counter/Timer)
 366   1        // T1M (Timer 1 Mode Select) = MODE2 (Mode 2, 8-bit Counter/Timer with
 367   1        //     Auto-Reload)
C51 COMPILER V9.60.0.0   SMB_INIT                                                          04/16/2021 20:29:50 PAGE 7   

 368   1        // CT0 (Counter/Timer 0 Select) = TIMER (Timer Mode. Timer 0 increments
 369   1        //     on the clock defined by T0M in the CKCON register.)
 370   1        // GATE0 (Timer 0 Gate Control) = DISABLED (Timer 0 enabled when TR0 = 1
 371   1        //     irrespective of INT0 logic level.)
 372   1        // CT1 (Counter/Timer 1 Select) = TIMER (Timer Mode. Timer 1 increments
 373   1        //     on the clock defined by T1M in the CKCON register.)
 374   1        // GATE1 (Timer 1 Gate Control) = DISABLED (Timer 1 enabled when TR1 = 1
 375   1        //     irrespective of INT1 logic level.)
 376   1        */
 377   1        TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER | TMOD_GATE0__DISABLED
 378   1           | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 379   1        // [TMOD - Timer 0/1 Mode]$
 380   1      
 381   1        // $[TCON - Timer 0/1 Control]
 382   1        /*
 383   1        // TR1 (Timer 1 Run Control) = RUN (Start Timer 1 running.)
 384   1        */
 385   1        TCON |= TCON_TR1__RUN;
 386   1        // [TCON - Timer 0/1 Control]$
 387   1      
 388   1      
 389   1      }
 390          
 391          //================================================================================
 392          // SMBUS_0_enter_DefaultMode_from_BusFreeMode
 393          //================================================================================
 394          extern void SMBUS_0_enter_DefaultMode_from_BusFreeMode(void) {
 395   1        // $[SMB0ADR - SMBus 0 Slave Address]
 396   1        // [SMB0ADR - SMBus 0 Slave Address]$
 397   1      
 398   1        // $[SMB0ADM - SMBus 0 Slave Address Mask]
 399   1        // [SMB0ADM - SMBus 0 Slave Address Mask]$
 400   1      
 401   1        // $[SMB0TC - SMBus 0 Timing and Pin Control]
 402   1        // [SMB0TC - SMBus 0 Timing and Pin Control]$
 403   1      
 404   1        // $[SMB0CF - SMBus 0 Configuration]
 405   1        /*
 406   1        // SMBCS (SMBus Clock Source Selection) = TIMER1 (Timer 1 Overflow.)
 407   1        // ENSMB (SMBus Enable) = ENABLED (Enable the SMBus module.)
 408   1        // SMBFTE (SMBus Free Timeout Detection Enable) = FREE_TO_ENABLED (Enable
 409   1        //     bus free timeouts. The bus the bus will be considered free if SCL and
 410   1        //     SDA remain high for more than 10 SMBus clock source periods.)
 411   1        // SMBTOE (SMBus SCL Timeout Detection Enable) = SCL_TO_ENABLED (Enable
 412   1        //     SCL low timeouts.)
 413   1        // EXTHOLD (SMBus Setup and Hold Time Extension Enable) = ENABLED (Enable
 414   1        //     SDA extended setup and hold times.)
 415   1        // INH (SMBus Slave Inhibit) = SLAVE_DISABLED (Slave states are
 416   1        //     inhibited.)
 417   1        */
 418   1        SMB0CF &= ~SMB0CF_SMBCS__FMASK;
 419   1        SMB0CF |= SMB0CF_SMBCS__TIMER1
 420   1           | SMB0CF_ENSMB__ENABLED | SMB0CF_SMBFTE__FREE_TO_ENABLED | SMB0CF_SMBTOE__SCL_TO_ENABLED
 421   1           | SMB0CF_EXTHOLD__ENABLED | SMB0CF_INH__SLAVE_DISABLED;
 422   1        // [SMB0CF - SMBus 0 Configuration]$
 423   1      
 424   1      
 425   1      }
 426          
 427          //================================================================================
 428          // INTERRUPT_0_enter_DefaultMode_from_BusFreeMode
 429          //================================================================================
 430          extern void INTERRUPT_0_enter_DefaultMode_from_BusFreeMode(void) {
C51 COMPILER V9.60.0.0   SMB_INIT                                                          04/16/2021 20:29:50 PAGE 8   

 431   1        // $[EIE1 - Extended Interrupt Enable 1]
 432   1        /*
 433   1        // EADC0 (ADC0 Conversion Complete Interrupt Enable) = DISABLED (Disable
 434   1        //     ADC0 Conversion Complete interrupt.)
 435   1        // ECP0 (Comparator0 (CP0) Interrupt Enable) = DISABLED (Disable CP0
 436   1        //     interrupts.)
 437   1        // ECP1 (Comparator1 (CP1) Interrupt Enable) = DISABLED (Disable CP1
 438   1        //     interrupts.)
 439   1        // EMAT (Port Match Interrupts Enable) = DISABLED (Disable all Port Match
 440   1        //     interrupts.)
 441   1        // EPCA0 (Programmable Counter Array (PCA0) Interrupt Enable) = DISABLED
 442   1        //     (Disable all PCA0 interrupts.)
 443   1        // ESMB0 (SMBus (SMB0) Interrupt Enable) = ENABLED (Enable interrupt
 444   1        //     requests generated by SMB0.)
 445   1        // ET3 (Timer 3 Interrupt Enable) = ENABLED (Enable interrupt requests
 446   1        //     generated by the TF3L or TF3H flags.)
 447   1        // EWADC0 (Window Comparison ADC0 Interrupt Enable) = DISABLED (Disable
 448   1        //     ADC0 Window Comparison interrupt.)
 449   1        */
 450   1        EIE1 = EIE1_EADC0__DISABLED | EIE1_ECP0__DISABLED | EIE1_ECP1__DISABLED
 451   1           | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED | EIE1_ESMB0__ENABLED
 452   1           | EIE1_ET3__ENABLED | EIE1_EWADC0__DISABLED;
 453   1        // [EIE1 - Extended Interrupt Enable 1]$
 454   1      
 455   1        // $[EIP1 - Extended Interrupt Priority 1]
 456   1        // [EIP1 - Extended Interrupt Priority 1]$
 457   1      
 458   1        // $[IE - Interrupt Enable]
 459   1        /*
 460   1        // EA (All Interrupts Enable) = ENABLED (Enable each interrupt according
 461   1        //     to its individual mask setting.)
 462   1        // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 463   1        //     interrupt 0.)
 464   1        // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 465   1        //     interrupt 1.)
 466   1        // ESPI0 (SPI0 Interrupt Enable) = DISABLED (Disable all SPI0
 467   1        //     interrupts.)
 468   1        // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 469   1        //     interrupt.)
 470   1        // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 471   1        //     interrupt.)
 472   1        // ET2 (Timer 2 Interrupt Enable) = DISABLED (Disable Timer 2 interrupt.)
 473   1        // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
 474   1        */
 475   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 476   1           | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__DISABLED | IE_ES0__DISABLED;
 477   1        // [IE - Interrupt Enable]$
 478   1      
 479   1        // $[IP - Interrupt Priority]
 480   1        // [IP - Interrupt Priority]$
 481   1      
 482   1      
 483   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    130    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.60.0.0   SMB_INIT                                                          04/16/2021 20:29:50 PAGE 9   

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
